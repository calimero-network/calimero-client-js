/** @generated by @calimero/abi-codegen â€” DO NOT EDIT. */

export interface AbiState {
  counters: Record<string, number>;
  users: UserId32[];
}

export type Action =
  | { kind: "Ping" }
  | { kind: "SetName"; payload: string }
  | { kind: "Update"; payload: UpdatePayload }

export type ConformanceError =
  | { kind: "BadInput" }
  | { kind: "NotFound"; payload: string }

/** Fixed-length bytes (size: 64). Represented as Uint8Array at runtime. */
export type Hash64 = Uint8Array;

export interface Person {
  id: UserId32;
  name: string;
  age: number;
}

export interface Profile {
  bio: string | null;
  avatar: Uint8Array | null;
  nicknames: string[];
}

/** Fixed-length bytes (size: 32). Represented as Uint8Array at runtime. */
export type UserId32 = Uint8Array;

export interface UpdatePayload {
  id: UserId32;
  data: string;
}

export type may_failErrorCode = "BAD_INPUT" | "NOT_FOUND";
export type may_failError = { code: may_failErrorCode } & (
  | { code: "BAD_INPUT" }
  | { code: "NOT_FOUND"; payload: string }
);

export type find_personErrorCode = "BAD_INPUT" | "NOT_FOUND";
export type find_personError = { code: find_personErrorCode } & (
  | { code: "BAD_INPUT" }
  | { code: "NOT_FOUND"; payload: string }
);


export type NamedPayload = string;

export type DataPayload = Uint8Array;

export type PersonUpdatedPayload = string;

export type ActionTakenPayload = string;

export type AbiEvent =
  | { name: "Ping" }
  | { name: "Named"; payload: string }
  | { name: "Data"; payload: Uint8Array }
  | { name: "PersonUpdated"; payload: string }
  | { name: "ActionTaken"; payload: string }
;
